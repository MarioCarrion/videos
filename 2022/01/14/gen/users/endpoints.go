// Code generated by goa v3.5.3, DO NOT EDIT.
//
// users endpoints
//
// Command:
// $ goa gen mario/goa/design

package users

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Endpoints wraps the "users" service endpoints.
type Endpoints struct {
	Create goa.Endpoint
	All    goa.Endpoint
}

// NewEndpoints wraps the methods of the "users" service with endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		Create: NewCreateEndpoint(s),
		All:    NewAllEndpoint(s),
	}
}

// Use applies the given middleware to all the "users" service endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.Create = m(e.Create)
	e.All = m(e.All)
}

// NewCreateEndpoint returns an endpoint function that calls the method
// "create" of service "users".
func NewCreateEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*User)
		return s.Create(ctx, p)
	}
}

// NewAllEndpoint returns an endpoint function that calls the method "all" of
// service "users".
func NewAllEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		return s.All(ctx)
	}
}
