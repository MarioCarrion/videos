// Code generated by goa v3.5.3, DO NOT EDIT.
//
// users HTTP client CLI support package
//
// Command:
// $ goa gen mario/goa/design

package client

import (
	"encoding/json"
	"fmt"
	users "mario/goa/gen/users"
	"unicode/utf8"

	goa "goa.design/goa/v3/pkg"
)

// BuildCreatePayload builds the payload for the users create endpoint from CLI
// flags.
func BuildCreatePayload(usersCreateBody string) (*users.User, error) {
	var err error
	var body CreateRequestBody
	{
		err = json.Unmarshal([]byte(usersCreateBody), &body)
		if err != nil {
			return nil, fmt.Errorf("invalid JSON for body, \nerror: %s, \nexample of valid JSON:\n%s", err, "'{\n      \"birth_year\": 2004,\n      \"name\": \"nne\"\n   }'")
		}
		if utf8.RuneCountInString(body.Name) < 5 {
			err = goa.MergeErrors(err, goa.InvalidLengthError("body.name", body.Name, utf8.RuneCountInString(body.Name), 5, true))
		}
		if body.BirthYear < 1900 {
			err = goa.MergeErrors(err, goa.InvalidRangeError("body.birth_year", body.BirthYear, 1900, true))
		}
		if body.BirthYear > 2022 {
			err = goa.MergeErrors(err, goa.InvalidRangeError("body.birth_year", body.BirthYear, 2022, false))
		}
		if err != nil {
			return nil, err
		}
	}
	v := &users.User{
		Name:      body.Name,
		BirthYear: body.BirthYear,
	}

	return v, nil
}
